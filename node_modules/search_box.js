//search key word
var events = require('events');
var fs = require('fs');
var util = require('util');
var sqliteTemplate = require('sqlite_template');
function unique(arr) {
  var ret = []
  for (var i = 0; i < arr.length; i++) {
    var item = arr[i]
    if (ret.indexOf(item) === -1) {
      ret.push(item)
    }
  }
  return ret
}

function SearchBox(jquery_element){
	events.EventEmitter.call(this);
	this.element = jquery_element;
	this.hanziArray = [];
  	var self = this;
	this.element.on('click', function() {
		var words = $("input[name = 'ChineseWords']").val();
		// console.log("get input:" + words);
		var backInfo = {"status": false, "msg": ""};
		var re = new RegExp("[\u4e00-\u9fa5]", "g");
		var filterWords = words.match(re);
		// console.log(filterWords);
		if(words.length <= 0){
			backInfo.msg = "blank";
		}else if(words.length > 6){
			backInfo.msg = "more";
		}else{
			backInfo.status = true;
			self.hanziArray = unique(filterWords);
		}
		self.emit('navigate', backInfo);
  	});
}
util.inherits(SearchBox, events.EventEmitter);
SearchBox.prototype.extract = function() {
	if(this.hanziArray === null){

	}
	var sqlite = sqliteTemplate.langTemplate('hanzi.db');
	var hanziArray = this.hanziArray;
	var that = this;
	var idCondition = {
		"table": "hanzi_list",
		"fields": ["id","name"],
		"conditions": {
			"name": hanziArray, 
		}
	}; 
	sqlite.linkDb();
	sqlite.findAll(idCondition, function(err, row){
		console.log("all origin id name",row);
		var hanziObj = new Object();
		var hanziIds = new Array();
		for (var i in row) {
			hanziObj[row[i].id] = {"origin":row[i].name};
			hanziIds.push(row[i].id);
		};
		console.log("search result",hanziObj);
		console.log("search ids",hanziIds);


		var chaifenCondition = {
			"table": "hanzi_division",
			"fields": ["id","division"],
			"conditions": {
				"id": hanziIds, 
			}
		}; 
		var pinyinCondition = {
			"table": "hanzi_pinyin",
			"fields": ["id","pinyin"],
			"conditions": {
				"id": hanziIds, 
			}
		}; 
		var pinyinListCon = {
			"table": "pinyin_list",
			"fields": ["pinyin","hanzi_id"],
		}; 
		sqlite.findAll(chaifenCondition, function(err, row){
			console.log("chaifanzi", row);
			for (var i in row) {
				hanziObj[row[i].id]["chaifen"] = row[i].division;
			};
		});
		sqlite.findAll(pinyinCondition, function(err, row){
			console.log("pinyin", row);
			// TODO: use all pinyin of one hanzi 
			var pinyin_list = "";
			for(var i in row){
				hanziObj[row[i].id]["pinyin"] = row[i].pinyin.split(" ");
				pinyin_list = pinyin_list + " " + row[i].pinyin;
			}
			var pinyin_arr = pinyin_list.split(" ");
			pinyin_arr.shift();
			console.log("pinyin_arr", pinyin_arr);
			console.log("hanziObj", hanziObj);

			pinyinListCon.conditions = {"pinyin": pinyin_arr}
			sqlite.findEach(pinyinListCon, function(err_l, row_l){
				console.log("pinyin-id", row_l);
				hanziObj[row.id]["tongyin_id"] = row_l.hanzi_id;
			})
		});

	});
	sqlite.closeDb();
}
exports.SearchBox = SearchBox; 
