
function langFilter(str){
	return /[><]/.test(str);
}
var UnifiedSQL = function(databasePath) {
	var sqlite3 = require('sqlite3').verbose();
  	var db;

	var andSql = function(key, objAnd){
		var nameField = key;
		if(!langFilter(nameField)){
			nameField += "=";
		}
		return nameField + "'" + objAnd.key + "'" ;
	};
	var orSql = function(objOr){
		var orPArt = "(";
		for(var key in objOr){
			if(key == "OR"){
				orSql(objOr.key);
			}else{
				var nameField = key;
				if(!langFilter(nameField)){
					nameField += "=";
				}
				orPArt = orPArt + nameField + "'" + objOr.key + "'" + " OR ";
			}
		}
		return orPArt + "0)";
	}
	var connectLang = function(conditions){
		var lang = "";
		for(var key in conditions){
			if(key == "OR"){
				lang += orSql(conditions.key) + " AND ";
			}else{
				lang += andSql(key, conditions) + " AND ";
			}
		}
		return lang + "1"
	}
	var preSql = function(){
		var tableName = con.table;	// "tableName"
		var fieldName = con.fields.join(',');	//["id", "name"]
		var sqlang = "SELECT " + fieldName + " FROM " + tableName + " WHERE 1 ";
		return sqlang;
	}

	return {
		setDb: function(newPath){
			databasePath = newPath
		},
		linkDb: function(){
			db = new sqlite3.Database(databasePath);
		},
		closeDb: function(){
			db.close();
		},
		findAll: function(){

		},
		findOne: function(con){
			// for(var key in con.conditions){
			// 	if(key != "OR"){
			// 		conPart += andSql(key, con.conditions);
			// 	}else if (key == "OR"){
			// 		var orConditions = con.conditions['OR'];
			// 		conPart += orSql(orConditions);
			// 	}
				
			// }
			// sqlang = sqlang + conPart;
			// console.log(sqlang);
			// db.get(sqlang, function(err, row){
			// 	console.log(row);
			// });
		}
	}
}

var findChar = UnifiedSQL('Chinese_charater.db');
findChar.linkDb();
var con = {
	"table": "chaizi",
	"fields": ["id", "chaifen"],
	"conditions": {
		"id": 1, 
		"chaifen":"口阿"
		"OR":{

		}
	}
}
findChar.findOne(con);
findChar.closeDb();