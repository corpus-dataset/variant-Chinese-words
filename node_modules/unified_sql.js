
function langFilter(str){
	return /[><]/.test(str);
}
var UnifiedSQL = function(databasePath) {
	var sqlite3 = require('sqlite3').verbose();
  	var db;

	return {
		setDb: function(newPath){
			databasePath = newPath
		},
		linkDb: function(){
			db = new sqlite3.Database(databasePath);
		},
		closeDb: function(){
			db.close();
		},
		findAll: function(){

		},
		findOne: function(con){
			var tableName = con.table;	// "tableName"
			var fieldName = con.fields.join(',');	//["id", "name"]
			var sqlang = "SELECT " + fieldName + " FROM " + tableName + " WHERE 1 AND";
			var conPart = "";
			for(var keyWords in con){
				if(keyWords == "conditions"){
					conPart = " (";
				}else if (keyWords == "OR"){
					conPart = " OR ( ";
				}else{
					continue;
				}
				var count = 0;
				for(var field in con[keyWords]){
					count ++;
					var nameField = field;
					if(!langFilter(field)){
						nameField += "=";
					}
					if(count > 1){
						conPart += " AND "; 
					}
					conPart = conPart + nameField + "'" + con[keyWords][field] + "'";
				}	
				conPart = conPart + ") "; 
			}
			sqlang = sqlang + conPart;
			console.log(sqlang);
			db.get(sqlang, function(err, row){
				console.log(row);
			});
		}
	}
}

var findChar = UnifiedSQL('Chinese_charater.db');
findChar.linkDb();
var con = {
	"table": "chaizi",
	"fields": ["id", "chaifen"],
	"conditions": {
		"id": 1, 
		"chaifen":"口阿"
	}
}
findChar.findOne(con);
findChar.closeDb();